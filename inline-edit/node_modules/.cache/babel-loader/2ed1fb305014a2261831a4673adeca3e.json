{"ast":null,"code":"var _jsxFileName = \"/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst App = () => {\n  const [loading, setIsLoading] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [status, setStatus] = useState(null);\n\n  const fetchData = async () => {\n    await fetch('/api/input').then(json => {\n      console.log('json: ', json); // const data = JSON.parse(json._bodyInit);\n      // setInputValue(data.text);\n    });\n  };\n\n  useEffect(() => {\n    loading && fetchData();\n  }, []);\n\n  const handleChange = e => {\n    const {\n      value\n    } = e.target;\n    setInputValue(value);\n  };\n\n  const handleBlur = async e => {\n    const {\n      value\n    } = e.target;\n    setIsLoading(true);\n    await fetch('/api/input', {\n      method: 'POST',\n      body: JSON.stringify({\n        input: value\n      })\n    });\n    setStatus('success');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: inputValue,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, loading && /*#__PURE__*/React.createElement(React.Fragment, null, \" loading... \"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, status === 'success' && /*#__PURE__*/React.createElement(React.Fragment, null, \"tick\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js"],"names":["React","useState","useEffect","App","loading","setIsLoading","inputValue","setInputValue","status","setStatus","fetchData","fetch","then","json","console","log","handleChange","e","value","target","handleBlur","method","body","JSON","stringify","input","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,OAAD,EAAUC,YAAV,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMS,SAAS,GAAG,YAAY;AAC5B,UAAMC,KAAK,CAAC,YAAD,CAAL,CAAoBC,IAApB,CAA0BC,IAAD,IAAU;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB,EADuC,CAEvC;AACA;AACD,KAJK,CAAN;AAKD,GAND;;AAQAX,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,OAAO,IAAIM,SAAS,EAApB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAYD,CAAC,CAACE,MAApB;AACAZ,IAAAA,aAAa,CAACW,KAAD,CAAb;AACD,GAHD;;AAKA,QAAME,UAAU,GAAG,MAAOH,CAAP,IAAa;AAC9B,UAAM;AAAEC,MAAAA;AAAF,QAAYD,CAAC,CAACE,MAApB;AACAd,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMM,KAAK,CAAC,YAAD,EAAe;AACxBU,MAAAA,MAAM,EAAE,MADgB;AAExBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAEP;AAAT,OAAf;AAFkB,KAAf,CAAX;AAIAT,IAAAA,SAAS,CAAC,SAAD,CAAT;AACD,GARD;;AAUA,sBACE,uDACE;AAAK,IAAA,KAAK,EAAE;AAAEiB,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAEpB,UAAd;AAA0B,IAAA,QAAQ,EAAEU,YAApC;AAAkD,IAAA,MAAM,EAAEI,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMhB,OAAO,iBAAI,yDAAjB,CAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMI,MAAM,KAAK,SAAX,iBAAwB,iDAA9B,CALF,CADF;AASD,CAzCD;;AA2CA,eAAeL,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst App = () => {\n  const [loading, setIsLoading] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [status, setStatus] = useState(null);\n\n  const fetchData = async () => {\n    await fetch('/api/input').then((json) => {\n      console.log('json: ', json);\n      // const data = JSON.parse(json._bodyInit);\n      // setInputValue(data.text);\n    });\n  };\n\n  useEffect(() => {\n    loading && fetchData();\n  }, []);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setInputValue(value);\n  };\n\n  const handleBlur = async (e) => {\n    const { value } = e.target;\n    setIsLoading(true);\n    await fetch('/api/input', {\n      method: 'POST',\n      body: JSON.stringify({ input: value }),\n    });\n    setStatus('success');\n  };\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <input value={inputValue} onChange={handleChange} onBlur={handleBlur} />\n        <div>{loading && <> loading... </>}</div>\n      </div>\n      <div>{status === 'success' && <>tick</>}</div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
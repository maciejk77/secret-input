{"ast":null,"code":"var _jsxFileName = \"/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Server } from 'miragejs';\nlet server = new Server({\n  timing: 1000\n});\nserver.get('/api/input', {\n  text: 'foo'\n}); // server.post('/api/input', (_, request) => {\n//   return JSON.parse(request.requestBody);\n// });\n\nconst App = () => {\n  const [loading, setIsLoading] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  console.log(inputValue);\n\n  const fetchData = async () => {\n    await fetch('/api/input').then(json => {\n      console.log('json: ', JSON.parse(json._bodyInit)); // setInputValue(json.input);\n      // setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleChange = e => {\n    const {\n      value\n    } = e.target;\n    setInputValue(value);\n  }; // const handleBlur = (e) => {\n  //   const { value } = e.target;\n  //   setIsLoading(true);\n  //   fetch('/api/input', {\n  //     method: 'POST',\n  //     body: JSON.stringify({ input: value }),\n  //   });\n  //   setIsLoading(false);\n  // };\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: inputValue,\n    onChange: handleChange // onBlur={handleBlur}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), loading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, \"Loading...\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, inputValue));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js"],"names":["React","useState","useEffect","Server","server","timing","get","text","App","loading","setIsLoading","inputValue","setInputValue","console","log","fetchData","fetch","then","json","JSON","parse","_bodyInit","handleChange","e","value","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAAEE,EAAAA,MAAM,EAAE;AAAV,CAAX,CAAb;AACAD,MAAM,CAACE,GAAP,CAAW,YAAX,EAAyB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAzB,E,CACA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,OAAD,EAAUC,YAAV,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;;AAEA,QAAMI,SAAS,GAAG,YAAY;AAC5B,UAAMC,KAAK,CAAC,YAAD,CAAL,CAAoBC,IAApB,CAA0BC,IAAD,IAAU;AACvCL,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBK,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,SAAhB,CAAtB,EADuC,CAGvC;AACA;AACD,KALK,CAAN;AAMD,GAPD;;AASAnB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAYD,CAAC,CAACE,MAApB;AACAb,IAAAA,aAAa,CAACY,KAAD,CAAb;AACD,GAHD,CAlBgB,CAuBhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAEb,UADT;AAEE,IAAA,QAAQ,EAAEW,YAFZ,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGb,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANd,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,UAAN,CAPF,CADF;AAWD,CA5CD;;AA8CA,eAAeH,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Server } from 'miragejs';\n\nlet server = new Server({ timing: 1000 });\nserver.get('/api/input', { text: 'foo' });\n// server.post('/api/input', (_, request) => {\n//   return JSON.parse(request.requestBody);\n// });\n\nconst App = () => {\n  const [loading, setIsLoading] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  console.log(inputValue);\n\n  const fetchData = async () => {\n    await fetch('/api/input').then((json) => {\n      console.log('json: ', JSON.parse(json._bodyInit));\n\n      // setInputValue(json.input);\n      // setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setInputValue(value);\n  };\n\n  // const handleBlur = (e) => {\n  //   const { value } = e.target;\n  //   setIsLoading(true);\n  //   fetch('/api/input', {\n  //     method: 'POST',\n  //     body: JSON.stringify({ input: value }),\n  //   });\n  //   setIsLoading(false);\n  // };\n\n  return (\n    <div>\n      <input\n        value={inputValue}\n        onChange={handleChange}\n        // onBlur={handleBlur}\n      />\n      {loading && <div>Loading...</div>}\n      <div>{inputValue}</div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
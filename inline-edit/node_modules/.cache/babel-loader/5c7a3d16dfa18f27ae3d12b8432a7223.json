{"ast":null,"code":"var _jsxFileName = \"/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Server } from 'miragejs';\nlet server = new Server({\n  timing: 2000\n});\nserver.get('/api/input', {\n  input: 'Foobarbaz'\n});\n\nconst App = () => {\n  const [loading, setIsLoading] = useState(true);\n  const [inputValue, setInputValue] = useState('');\n  console.log(inputValue);\n\n  const fetchData = async () => {\n    await fetch('/api/input').then(json => {\n      console.log('json: ', json);\n      setInputValue(json.input);\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    // setInputValue('Some initial text');\n    fetchData();\n  }, []);\n\n  const handleChange = e => {\n    const {\n      value\n    } = e.target;\n    setInputValue(value);\n  };\n\n  const handleBlur = e => {\n    const {\n      value\n    } = e.target;\n    setInputValue(value);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: inputValue,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js"],"names":["React","useState","useEffect","Server","server","timing","get","input","App","loading","setIsLoading","inputValue","setInputValue","console","log","fetchData","fetch","then","json","handleChange","e","value","target","handleBlur"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAAEE,EAAAA,MAAM,EAAE;AAAV,CAAX,CAAb;AACAD,MAAM,CAACE,GAAP,CAAW,YAAX,EAAyB;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAzB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,OAAD,EAAUC,YAAV,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;;AAEA,QAAMI,SAAS,GAAG,YAAY;AAC5B,UAAMC,KAAK,CAAC,YAAD,CAAL,CAAoBC,IAApB,CAA0BC,IAAD,IAAU;AACvCL,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,IAAtB;AACAN,MAAAA,aAAa,CAACM,IAAI,CAACX,KAAN,CAAb;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJK,CAAN;AAKD,GAND;;AAQAR,EAAAA,SAAS,CAAC,MAAM;AACd;AACAa,IAAAA,SAAS;AACV,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAYD,CAAC,CAACE,MAApB;AACAV,IAAAA,aAAa,CAACS,KAAD,CAAb;AACD,GAHD;;AAKA,QAAME,UAAU,GAAIH,CAAD,IAAO;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,CAAC,CAACE,MAApB;AACAV,IAAAA,aAAa,CAACS,KAAD,CAAb;AACD,GAHD;;AAKA,MAAIZ,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAEE,UAAd;AAA0B,IAAA,QAAQ,EAAEQ,YAApC;AAAkD,IAAA,MAAM,EAAEI,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CArCD;;AAuCA,eAAef,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Server } from 'miragejs';\n\nlet server = new Server({ timing: 2000 });\nserver.get('/api/input', { input: 'Foobarbaz' });\n\nconst App = () => {\n  const [loading, setIsLoading] = useState(true);\n  const [inputValue, setInputValue] = useState('');\n  console.log(inputValue);\n\n  const fetchData = async () => {\n    await fetch('/api/input').then((json) => {\n      console.log('json: ', json);\n      setInputValue(json.input);\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    // setInputValue('Some initial text');\n    fetchData();\n  }, []);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setInputValue(value);\n  };\n\n  const handleBlur = (e) => {\n    const { value } = e.target;\n    setInputValue(value);\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <input value={inputValue} onChange={handleChange} onBlur={handleBlur} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
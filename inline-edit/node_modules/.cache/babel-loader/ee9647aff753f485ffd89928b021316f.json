{"ast":null,"code":"var _jsxFileName = \"/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js\";\nimport React, { useEffect } from 'react';\nimport runServer from './server';\nimport useInput from './hooks/useInput';\nimport useSubmit from './hooks/useSubmit';\nimport useData from './hooks/useData';\nimport { SpinnerRoundOutlined } from 'spinners-react'; // 2000ms delayed\n\nrunServer();\n\nconst App = () => {\n  const {\n    handleChange,\n    inputValue\n  } = useInput();\n  const {\n    loading,\n    isSuccess,\n    error,\n    handleBlur\n  } = useSubmit();\n  const {\n    fetchData\n  } = useData();\n  useEffect(() => {\n    loading && fetchData();\n  }, [fetchData, loading]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SpinnerRoundOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: inputValue,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, loading && /*#__PURE__*/React.createElement(React.Fragment, null, \" loading... \"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, !loading && isSuccess && /*#__PURE__*/React.createElement(React.Fragment, null, \"\\u2705\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, !loading && error && /*#__PURE__*/React.createElement(React.Fragment, null, error)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js"],"names":["React","useEffect","runServer","useInput","useSubmit","useData","SpinnerRoundOutlined","App","handleChange","inputValue","loading","isSuccess","error","handleBlur","fetchData","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,oBAAT,QAAqC,gBAArC,C,CAEA;;AACAJ,SAAS;;AAET,MAAMK,GAAG,GAAG,MAAM;AAChB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA+BN,QAAQ,EAA7C;AACA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA;AAA7B,MAA4CT,SAAS,EAA3D;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAgBT,OAAO,EAA7B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,IAAII,SAAS,EAApB;AACD,GAFQ,EAEN,CAACA,SAAD,EAAYJ,OAAZ,CAFM,CAAT;AAIA,sBACE,uDACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,KAAK,EAAEN,UAAd;AAA0B,IAAA,QAAQ,EAAED,YAApC;AAAkD,IAAA,MAAM,EAAEK,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,OAAO,iBAAI,yDAAjB,CAHF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,CAACA,OAAD,IAAYC,SAAZ,iBAAyB,mDAA/B,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,CAACD,OAAD,IAAYE,KAAZ,iBAAqB,0CAAGA,KAAH,CAA3B,CAPF,CADF;AAWD,CApBD;;AAsBA,eAAeL,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport runServer from './server';\nimport useInput from './hooks/useInput';\nimport useSubmit from './hooks/useSubmit';\nimport useData from './hooks/useData';\nimport { SpinnerRoundOutlined } from 'spinners-react';\n\n// 2000ms delayed\nrunServer();\n\nconst App = () => {\n  const { handleChange, inputValue } = useInput();\n  const { loading, isSuccess, error, handleBlur } = useSubmit();\n  const { fetchData } = useData();\n\n  useEffect(() => {\n    loading && fetchData();\n  }, [fetchData, loading]);\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <SpinnerRoundOutlined />\n        <input value={inputValue} onChange={handleChange} onBlur={handleBlur} />\n        <div>{loading && <> loading... </>}</div>\n      </div>\n      <div>{!loading && isSuccess && <>&#9989;</>}</div>\n      <div>{!loading && error && <>{error}</>}</div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
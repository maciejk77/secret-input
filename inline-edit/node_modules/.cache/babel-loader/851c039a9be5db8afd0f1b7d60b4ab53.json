{"ast":null,"code":"var _jsxFileName = \"/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Server } from 'miragejs';\nlet server = new Server({\n  timing: 2000\n});\nserver.get('/api/input', {});\nserver.post('/api/input', (_, request) => {\n  return JSON.parse(request.requestBody);\n});\n\nconst App = () => {\n  const [loading, setIsLoading] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [isSuccess, setIsSuccess] = useState(null);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    await fetch('/api/input').then(json => {\n      const data = JSON.parse(json._bodyInit);\n      setInputValue(data.text);\n    });\n  };\n\n  useEffect(() => {\n    loading && fetchData();\n  }, [loading]);\n\n  const handleChange = e => {\n    const {\n      value\n    } = e.target;\n    setInputValue(value);\n  };\n\n  const handleBlur = async e => {\n    const {\n      value\n    } = e.target;\n    const variant = Math.random();\n\n    if (variant <= 0.5) {\n      setIsLoading(true);\n      await fetch('/api/input', {\n        method: 'POST',\n        body: JSON.stringify({\n          input: ''\n        })\n      });\n      setIsLoading(false);\n      setIsSuccess(true);\n    } else {\n      setIsLoading(true);\n      await fetch('/api/input', {\n        method: 'POST',\n        body: JSON.stringify({\n          error: 'Aha, error!'\n        })\n      });\n      setIsLoading(false);\n      setIsSuccess(false);\n      setError(true);\n    } // setIsLoading(true);\n    // await fetch('/api/input', {\n    //   method: 'POST',\n    //   body: JSON.stringify({ input: value }),\n    // });\n    // setIsLoading(false);\n    // setIsSuccess(true);\n\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: inputValue,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, loading && /*#__PURE__*/React.createElement(React.Fragment, null, \" loading... \"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, isSuccess ? /*#__PURE__*/React.createElement(React.Fragment, null, \"\\u2705\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 40\n    }\n  }, \"n/a\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, error && /*#__PURE__*/React.createElement(React.Fragment, null, \"Error\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js"],"names":["React","useState","useEffect","Server","server","timing","get","post","_","request","JSON","parse","requestBody","App","loading","setIsLoading","inputValue","setInputValue","isSuccess","setIsSuccess","error","setError","fetchData","fetch","then","json","data","_bodyInit","text","handleChange","e","value","target","handleBlur","variant","Math","random","method","body","stringify","input","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Server } from 'miragejs';\n\nlet server = new Server({ timing: 2000 });\nserver.get('/api/input', {});\nserver.post('/api/input', (_, request) => {\n  return JSON.parse(request.requestBody);\n});\n\nconst App = () => {\n  const [loading, setIsLoading] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [isSuccess, setIsSuccess] = useState(null);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    await fetch('/api/input').then((json) => {\n      const data = JSON.parse(json._bodyInit);\n      setInputValue(data.text);\n    });\n  };\n\n  useEffect(() => {\n    loading && fetchData();\n  }, [loading]);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setInputValue(value);\n  };\n\n  const handleBlur = async (e) => {\n    const { value } = e.target;\n\n    const variant = Math.random();\n    if (variant <= 0.5) {\n      setIsLoading(true);\n      await fetch('/api/input', {\n        method: 'POST',\n        body: JSON.stringify({ input: '' }),\n      });\n      setIsLoading(false);\n      setIsSuccess(true);\n    } else {\n      setIsLoading(true);\n      await fetch('/api/input', {\n        method: 'POST',\n        body: JSON.stringify({ error: 'Aha, error!' }),\n      });\n      setIsLoading(false);\n      setIsSuccess(false);\n      setError(true);\n    }\n\n    // setIsLoading(true);\n    // await fetch('/api/input', {\n    //   method: 'POST',\n    //   body: JSON.stringify({ input: value }),\n    // });\n    // setIsLoading(false);\n    // setIsSuccess(true);\n  };\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <input value={inputValue} onChange={handleChange} onBlur={handleBlur} />\n        <div>{loading && <> loading... </>}</div>\n      </div>\n      <div>{isSuccess ? <>&#9989;</> : <div>n/a</div>}</div>\n      <div>{error && <>Error</>}</div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
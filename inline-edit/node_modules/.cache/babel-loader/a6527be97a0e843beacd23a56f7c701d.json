{"ast":null,"code":"import { useState } from 'react';\nimport { BASE_PATH } from '../constants';\n\nconst useSubmit = () => {\n  const [loading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleBlur = async e => {\n    const {\n      value\n    } = e.target;\n    const variant = Math.random();\n\n    const submitInputValue = async () => {\n      setIsLoading(true);\n      await fetch(BASE_PATH, {\n        method: 'POST',\n        body: JSON.stringify({\n          input: value\n        })\n      });\n      setIsLoading(false);\n    };\n\n    const handleSuccess = () => {\n      submitInputValue();\n      setIsSuccess(true);\n      setError(false);\n    };\n\n    const handleFailure = () => {\n      submitInputValue();\n      setIsSuccess(false);\n      setError(true);\n    };\n\n    if (variant <= 0.5) {\n      handleSuccess();\n    } else {\n      handleFailure();\n    }\n  };\n\n  return {\n    handleBlur\n  };\n};\n\nexport default useSubmit;","map":{"version":3,"sources":["/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/hooks/useSubmit.js"],"names":["useState","BASE_PATH","useSubmit","loading","setIsLoading","isSuccess","setIsSuccess","error","setError","handleBlur","e","value","target","variant","Math","random","submitInputValue","fetch","method","body","JSON","stringify","input","handleSuccess","handleFailure"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,OAAD,EAAUC,YAAV,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMS,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC9B,UAAM;AAAEC,MAAAA;AAAF,QAAYD,CAAC,CAACE,MAApB;AACA,UAAMC,OAAO,GAAGC,IAAI,CAACC,MAAL,EAAhB;;AAEA,UAAMC,gBAAgB,GAAG,YAAY;AACnCZ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMa,KAAK,CAAChB,SAAD,EAAY;AACrBiB,QAAAA,MAAM,EAAE,MADa;AAErBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,KAAK,EAAEX;AAAT,SAAf;AAFe,OAAZ,CAAX;AAKAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KARD;;AAUA,UAAMmB,aAAa,GAAG,MAAM;AAC1BP,MAAAA,gBAAgB;AAEhBV,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,KALD;;AAOA,UAAMgB,aAAa,GAAG,MAAM;AAC1BR,MAAAA,gBAAgB;AAEhBV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KALD;;AAOA,QAAIK,OAAO,IAAI,GAAf,EAAoB;AAClBU,MAAAA,aAAa;AACd,KAFD,MAEO;AACLC,MAAAA,aAAa;AACd;AACF,GAjCD;;AAmCA,SAAO;AAAEf,IAAAA;AAAF,GAAP;AACD,CAzCD;;AA2CA,eAAeP,SAAf","sourcesContent":["import { useState } from 'react';\nimport { BASE_PATH } from '../constants';\n\nconst useSubmit = () => {\n  const [loading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleBlur = async (e) => {\n    const { value } = e.target;\n    const variant = Math.random();\n\n    const submitInputValue = async () => {\n      setIsLoading(true);\n      await fetch(BASE_PATH, {\n        method: 'POST',\n        body: JSON.stringify({ input: value }),\n      });\n\n      setIsLoading(false);\n    };\n\n    const handleSuccess = () => {\n      submitInputValue();\n\n      setIsSuccess(true);\n      setError(false);\n    };\n\n    const handleFailure = () => {\n      submitInputValue();\n\n      setIsSuccess(false);\n      setError(true);\n    };\n\n    if (variant <= 0.5) {\n      handleSuccess();\n    } else {\n      handleFailure();\n    }\n  };\n\n  return { handleBlur };\n};\n\nexport default useSubmit;\n"]},"metadata":{},"sourceType":"module"}
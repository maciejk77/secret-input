{"ast":null,"code":"var _jsxFileName = \"/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport runServer from './server';\nimport { BASE_PATH } from './constants';\nimport useForm from './hooks/useInput';\nimport useInput from './hooks/useInput';\nrunServer();\n\nconst App = () => {\n  const {\n    handleChange,\n    inputValue,\n    setInputValue\n  } = useInput;\n  const [loading, setIsLoading] = useState(false); // const [inputValue, setInputValue] = useState('');\n\n  const [isSuccess, setIsSuccess] = useState(null);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    await fetch(BASE_PATH).then(json => {\n      const {\n        text\n      } = JSON.parse(json._bodyInit);\n      setInputValue(text);\n    });\n  };\n\n  useEffect(() => {\n    loading && fetchData();\n  }, [loading]); // const handleChange = (e) => {\n  //   const { value } = e.target;\n  //   setInputValue(value);\n  // };\n\n  const handleBlur = async e => {\n    const {\n      value\n    } = e.target;\n    const variant = Math.random();\n\n    const submitInputValue = async () => {\n      setIsLoading(true);\n      await fetch(BASE_PATH, {\n        method: 'POST',\n        body: JSON.stringify({\n          input: value\n        })\n      });\n      setIsLoading(false);\n    };\n\n    const handleSuccess = () => {\n      submitInputValue();\n      setIsSuccess(true);\n      setError(false);\n    };\n\n    const handleFailure = () => {\n      submitInputValue();\n      setIsSuccess(false);\n      setError(true);\n    };\n\n    if (variant <= 0.5) {\n      handleSuccess();\n    } else {\n      handleFailure();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: inputValue,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, loading && /*#__PURE__*/React.createElement(React.Fragment, null, \" loading... \"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, !loading && isSuccess && /*#__PURE__*/React.createElement(React.Fragment, null, \"\\u2705\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, !loading && error && /*#__PURE__*/React.createElement(React.Fragment, null, \"\\u26A0\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js"],"names":["React","useState","useEffect","runServer","BASE_PATH","useForm","useInput","App","handleChange","inputValue","setInputValue","loading","setIsLoading","isSuccess","setIsSuccess","error","setError","fetchData","fetch","then","json","text","JSON","parse","_bodyInit","handleBlur","e","value","target","variant","Math","random","submitInputValue","method","body","stringify","input","handleSuccess","handleFailure","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport runServer from './server';\nimport { BASE_PATH } from './constants';\nimport useForm from './hooks/useInput';\nimport useInput from './hooks/useInput';\n\nrunServer();\n\nconst App = () => {\n  const { handleChange, inputValue, setInputValue } = useInput;\n  const [loading, setIsLoading] = useState(false);\n  // const [inputValue, setInputValue] = useState('');\n  const [isSuccess, setIsSuccess] = useState(null);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    await fetch(BASE_PATH).then((json) => {\n      const { text } = JSON.parse(json._bodyInit);\n      setInputValue(text);\n    });\n  };\n\n  useEffect(() => {\n    loading && fetchData();\n  }, [loading]);\n\n  // const handleChange = (e) => {\n  //   const { value } = e.target;\n  //   setInputValue(value);\n  // };\n\n  const handleBlur = async (e) => {\n    const { value } = e.target;\n    const variant = Math.random();\n\n    const submitInputValue = async () => {\n      setIsLoading(true);\n      await fetch(BASE_PATH, {\n        method: 'POST',\n        body: JSON.stringify({ input: value }),\n      });\n\n      setIsLoading(false);\n    };\n\n    const handleSuccess = () => {\n      submitInputValue();\n\n      setIsSuccess(true);\n      setError(false);\n    };\n\n    const handleFailure = () => {\n      submitInputValue();\n\n      setIsSuccess(false);\n      setError(true);\n    };\n\n    if (variant <= 0.5) {\n      handleSuccess();\n    } else {\n      handleFailure();\n    }\n  };\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <input value={inputValue} onChange={handleChange} onBlur={handleBlur} />\n        <div>{loading && <> loading... </>}</div>\n      </div>\n      <div>{!loading && isSuccess && <>&#9989;</>}</div>\n      <div>{!loading && error && <>&#x26A0;</>}</div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport runServer from './server';\nimport { BASE_PATH } from './constants';\nimport useInput from './hooks/useInput';\nimport useSubmit from './hooks/useSubmit';\nrunServer();\nconst {\n  loading,\n  isSuccess,\n  error,\n  handleBlur\n} = useSubmit();\n\nconst App = () => {\n  const {\n    handleChange,\n    inputValue,\n    setInputValue\n  } = useInput(); // const [loading, setIsLoading] = useState(false);\n  // const [isSuccess, setIsSuccess] = useState(null);\n  // const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    await fetch(BASE_PATH).then(json => {\n      const {\n        text\n      } = JSON.parse(json._bodyInit);\n      setInputValue(text);\n    });\n  };\n\n  useEffect(() => {\n    loading && fetchData();\n  }, []); // const handleBlur = async (e) => {\n  //   const { value } = e.target;\n  //   const variant = Math.random();\n  //   const submitInputValue = async () => {\n  //     setIsLoading(true);\n  //     await fetch(BASE_PATH, {\n  //       method: 'POST',\n  //       body: JSON.stringify({ input: value }),\n  //     });\n  //     setIsLoading(false);\n  //   };\n  //   const handleSuccess = () => {\n  //     submitInputValue();\n  //     setIsSuccess(true);\n  //     setError(false);\n  //   };\n  //   const handleFailure = () => {\n  //     submitInputValue();\n  //     setIsSuccess(false);\n  //     setError(true);\n  //   };\n  //   if (variant <= 0.5) {\n  //     handleSuccess();\n  //   } else {\n  //     handleFailure();\n  //   }\n  // };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: inputValue,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, loading && /*#__PURE__*/React.createElement(React.Fragment, null, \" loading... \"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, !loading && isSuccess && /*#__PURE__*/React.createElement(React.Fragment, null, \"\\u2705\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, !loading && error && /*#__PURE__*/React.createElement(React.Fragment, null, \"\\u26A0\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js"],"names":["React","useState","useEffect","runServer","BASE_PATH","useInput","useSubmit","loading","isSuccess","error","handleBlur","App","handleChange","inputValue","setInputValue","fetchData","fetch","then","json","text","JSON","parse","_bodyInit","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEAH,SAAS;AACT,MAAM;AAAEI,EAAAA,OAAF;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA,KAAtB;AAA6BC,EAAAA;AAA7B,IAA4CJ,SAAS,EAA3D;;AAEA,MAAMK,GAAG,GAAG,MAAM;AAChB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,UAAhB;AAA4BC,IAAAA;AAA5B,MAA8CT,QAAQ,EAA5D,CADgB,CAEhB;AACA;AACA;;AAEA,QAAMU,SAAS,GAAG,YAAY;AAC5B,UAAMC,KAAK,CAACZ,SAAD,CAAL,CAAiBa,IAAjB,CAAuBC,IAAD,IAAU;AACpC,YAAM;AAAEC,QAAAA;AAAF,UAAWC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,SAAhB,CAAjB;AACAR,MAAAA,aAAa,CAACK,IAAD,CAAb;AACD,KAHK,CAAN;AAID,GALD;;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,IAAIQ,SAAS,EAApB;AACD,GAFQ,EAEN,EAFM,CAAT,CAbgB,CAiBhB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,uDACE;AAAK,IAAA,KAAK,EAAE;AAAEQ,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAEV,UAAd;AAA0B,IAAA,QAAQ,EAAED,YAApC;AAAkD,IAAA,MAAM,EAAEF,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,OAAO,iBAAI,yDAAjB,CAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,CAACA,OAAD,IAAYC,SAAZ,iBAAyB,mDAA/B,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,CAACD,OAAD,IAAYE,KAAZ,iBAAqB,mDAA3B,CANF,CADF;AAUD,CA9DD;;AAgEA,eAAeE,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport runServer from './server';\nimport { BASE_PATH } from './constants';\nimport useInput from './hooks/useInput';\nimport useSubmit from './hooks/useSubmit';\n\nrunServer();\nconst { loading, isSuccess, error, handleBlur } = useSubmit();\n\nconst App = () => {\n  const { handleChange, inputValue, setInputValue } = useInput();\n  // const [loading, setIsLoading] = useState(false);\n  // const [isSuccess, setIsSuccess] = useState(null);\n  // const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    await fetch(BASE_PATH).then((json) => {\n      const { text } = JSON.parse(json._bodyInit);\n      setInputValue(text);\n    });\n  };\n\n  useEffect(() => {\n    loading && fetchData();\n  }, []);\n\n  // const handleBlur = async (e) => {\n  //   const { value } = e.target;\n  //   const variant = Math.random();\n\n  //   const submitInputValue = async () => {\n  //     setIsLoading(true);\n  //     await fetch(BASE_PATH, {\n  //       method: 'POST',\n  //       body: JSON.stringify({ input: value }),\n  //     });\n\n  //     setIsLoading(false);\n  //   };\n\n  //   const handleSuccess = () => {\n  //     submitInputValue();\n\n  //     setIsSuccess(true);\n  //     setError(false);\n  //   };\n\n  //   const handleFailure = () => {\n  //     submitInputValue();\n\n  //     setIsSuccess(false);\n  //     setError(true);\n  //   };\n\n  //   if (variant <= 0.5) {\n  //     handleSuccess();\n  //   } else {\n  //     handleFailure();\n  //   }\n  // };\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <input value={inputValue} onChange={handleChange} onBlur={handleBlur} />\n        <div>{loading && <> loading... </>}</div>\n      </div>\n      <div>{!loading && isSuccess && <>&#9989;</>}</div>\n      <div>{!loading && error && <>&#x26A0;</>}</div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
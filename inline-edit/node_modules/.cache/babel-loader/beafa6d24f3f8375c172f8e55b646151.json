{"ast":null,"code":"var _jsxFileName = \"/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js\";\nimport React, { useEffect } from 'react';\nimport runServer from './server'; // import { BASE_PATH } from './constants';\n\nimport useInput from './hooks/useInput';\nimport useSubmit from './hooks/useSubmit';\nimport useData from './hooks/useData';\nrunServer();\n\nconst App = () => {\n  const {\n    handleChange,\n    inputValue\n  } = useInput();\n  const {\n    loading,\n    isSuccess,\n    error,\n    handleBlur\n  } = useSubmit();\n  const {\n    setInputValue\n  } = useData(); // const fetchData = async () => {\n  //   await fetch(BASE_PATH).then((json) => {\n  //     const { text } = JSON.parse(json._bodyInit);\n  //     setInputValue(text);\n  //   });\n  // };\n\n  useEffect(() => {\n    loading && fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: inputValue,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, loading && /*#__PURE__*/React.createElement(React.Fragment, null, \" loading... \"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, !loading && isSuccess && /*#__PURE__*/React.createElement(React.Fragment, null, \"\\u2705\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, !loading && error && /*#__PURE__*/React.createElement(React.Fragment, null, \"\\u26A0\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/maciejkurek/Desktop/DEV/coyote-ui-interview/inline-edit/src/App.js"],"names":["React","useEffect","runServer","useInput","useSubmit","useData","App","handleChange","inputValue","loading","isSuccess","error","handleBlur","setInputValue","fetchData","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,UAAtB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEAH,SAAS;;AAET,MAAMI,GAAG,GAAG,MAAM;AAChB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA+BL,QAAQ,EAA7C;AACA,QAAM;AAAEM,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA;AAA7B,MAA4CR,SAAS,EAA3D;AACA,QAAM;AAAES,IAAAA;AAAF,MAAoBR,OAAO,EAAjC,CAHgB,CAIhB;AACA;AACA;AACA;AACA;AACA;;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,IAAIK,SAAS,EAApB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,uDACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAEP,UAAd;AAA0B,IAAA,QAAQ,EAAED,YAApC;AAAkD,IAAA,MAAM,EAAEK,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,OAAO,iBAAI,yDAAjB,CAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,CAACA,OAAD,IAAYC,SAAZ,iBAAyB,mDAA/B,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,CAACD,OAAD,IAAYE,KAAZ,iBAAqB,mDAA3B,CANF,CADF;AAUD,CAzBD;;AA2BA,eAAeL,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport runServer from './server';\n// import { BASE_PATH } from './constants';\nimport useInput from './hooks/useInput';\nimport useSubmit from './hooks/useSubmit';\nimport useData from './hooks/useData';\n\nrunServer();\n\nconst App = () => {\n  const { handleChange, inputValue } = useInput();\n  const { loading, isSuccess, error, handleBlur } = useSubmit();\n  const { setInputValue } = useData();\n  // const fetchData = async () => {\n  //   await fetch(BASE_PATH).then((json) => {\n  //     const { text } = JSON.parse(json._bodyInit);\n  //     setInputValue(text);\n  //   });\n  // };\n\n  useEffect(() => {\n    loading && fetchData();\n  }, []);\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <input value={inputValue} onChange={handleChange} onBlur={handleBlur} />\n        <div>{loading && <> loading... </>}</div>\n      </div>\n      <div>{!loading && isSuccess && <>&#9989;</>}</div>\n      <div>{!loading && error && <>&#x26A0;</>}</div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}